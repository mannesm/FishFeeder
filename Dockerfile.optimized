# syntax=docker/dockerfile:1
# Multi-stage build using uv for fast, minimal Python images

# Stage 1: Builder
FROM python:3.11-slim AS builder

RUN apt-get update && apt-get install -y gcc python3-dev curl \
    && rm -rf /var/lib/apt/lists/*

# Copy uv from its image
COPY --from=ghcr.io/astral-sh/uv:latest /uv /usr/local/bin/uv

ENV UV_SYSTEM_PYTHON=1 \
    UV_COMPILE_BYTECODE=1 \
    UV_LINK_MODE=copy

WORKDIR /app
COPY pyproject.toml uv.lock ./

# Install dependencies into a .venv
RUN uv sync --frozen --no-dev

# Stage 2: Runtime
FROM python:3.11-slim

RUN apt-get update  && rm -rf /var/lib/apt/lists/*

# Copy uv and virtual environment
COPY --from=builder /usr/local/bin/uv /usr/local/bin/uv
COPY --from=builder /app/.venv /app/.venv
COPY --from=builder /app/pyproject.toml /app/uv.lock ./

WORKDIR /app
COPY app/ ./app/

EXPOSE 8000
CMD ["uv", "run", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
